def enum(*sequential, **named):
    enums = dict(zip(sequential, range(len(sequential))), **named)
    return type('Enum', (), enums)

# from viewer-development/indra/newview/llpanelobject.cpp

VOLUMES = enum(
    'MI_BOX',
    'MI_CYLINDER',
    'MI_PRISM',
    'MI_SPHERE',
    'MI_TORUS',
    'MI_TUBE',
    'MI_RING',
    'MI_SCULPT',
    'MI_NONE',
    'MI_VOLUME_COUNT')

HOLES = enum(
    'MI_HOLE_SAME',
    'MI_HOLE_CIRCLE',
    'MI_HOLE_SQUARE',
    'MI_HOLE_TRIANGLE',
    'MI_HOLE_COUNT')

# from viewer-development/indra/llmath/llvolume.h

MIN_DETAIL_FACES = 6
MIN_LOD = 0
MAX_LOD = 3

MIN_VOLUME_PROFILE_WIDTH = 0.05
MIN_VOLUME_PATH_WIDTH = 0.05

CUT_QUANTA = 0.00002
SCALE_QUANTA = 0.01
SHEAR_QUANTA = 0.01
TAPER_QUANTA = 0.01
REV_QUANTA = 0.015
HOLLOW_QUANTA = 0.00002

MAX_VOLUME_TRIANGLE_INDICES = 10000

LL_PCODE_HOLLOW_MASK = 0x80
LL_PCODE_SEGMENT_MASK = 0x40
LL_PCODE_PATCH_MASK = 0x20
LL_PCODE_HEMI_MASK = 0x10
LL_PCODE_BASE_MASK = 0x0F

LL_PCODE_CUBE = 1
LL_PCODE_PRISM = 2
LL_PCODE_TETRAHEDRON = 3
LL_PCODE_PYRAMID = 4
LL_PCODE_CYLINDER = 5
LL_PCODE_CONE = 6
LL_PCODE_SPHERE = 7
LL_PCODE_TORUS = 8
LL_PCODE_VOLUME = 9

LL_PCODE_APP = 14
LL_PCODE_LEGACY = 15

LL_PCODE_LEGACY_AVATAR = 0x20 | LL_PCODE_LEGACY
LL_PCODE_LEGACY_GRASS = 0x50 | LL_PCODE_LEGACY
LL_PCODE_TREE_NEW = 0x60 | LL_PCODE_LEGACY
LL_PCODE_LEGACY_PART_SYS = 0x80 | LL_PCODE_LEGACY
LL_PCODE_LEGACY_ROCK = 0x90 | LL_PCODE_LEGACY
LL_PCODE_LEGACY_TEXT_BUBBLE = 0xE0 | LL_PCODE_LEGACY
LL_PCODE_LEGACY_TREE = 0xF0 | LL_PCODE_LEGACY

LL_PCODE_CYLINDER_HEMI = LL_PCODE_CYLINDER | LL_PCODE_HEMI_MASK
LL_PCODE_CONE_HEMI = LL_PCODE_CONE | LL_PCODE_HEMI_MASK
LL_PCODE_SPHERE_HEMI = LL_PCODE_SPHERE | LL_PCODE_HEMI_MASK
LL_PCODE_TORUS_HEMI = LL_PCODE_TORUS | LL_PCODE_HEMI_MASK

LL_PCODE_PROFILE_MASK = 0x0F
LL_PCODE_PROFILE_MIN = 0x00
LL_PCODE_PROFILE_CIRCLE = 0x00
LL_PCODE_PROFILE_SQUARE = 0x01
LL_PCODE_PROFILE_ISOTRI = 0x02
LL_PCODE_PROFILE_EQUALTRI = 0x03
LL_PCODE_PROFILE_RIGHTTRI = 0x04
LL_PCODE_PROFILE_CIRCLE_HALF = 0x05
LL_PCODE_PROFILE_MAX = 0x05

LL_PCODE_HOLE_MASK = 0xF0
LL_PCODE_HOLE_MIN = 0x00
LL_PCODE_HOLE_SAME = 0x00
LL_PCODE_HOLE_CIRCLE = 0x10
LL_PCODE_HOLE_SQUARE = 0x20
LL_PCODE_HOLE_TRIANGLE = 0x30
LL_PCODE_HOLE_MAX = 0x03  # min/max needs to be >> 4 of real min/max

LL_PCODE_PATH_IGNORE = 0x00
LL_PCODE_PATH_MIN = 0x01  # min/max needs to be >> 4 of real min/max
LL_PCODE_PATH_LINE = 0x10
LL_PCODE_PATH_CIRCLE = 0x20
LL_PCODE_PATH_CIRCLE2 = 0x30
LL_PCODE_PATH_TEST = 0x40
LL_PCODE_PATH_FLEXIBLE = 0x80
LL_PCODE_PATH_MAX = 0x08

LL_FACE_PATH_BEGIN = 0x1 << 0
LL_FACE_PATH_END = 0x1 << 1
LL_FACE_INNER_SIDE = 0x1 << 2
LL_FACE_PROFILE_BEGIN = 0x1 << 3
LL_FACE_PROFILE_END = 0x1 << 4
LL_FACE_OUTER_SIDE_0 = 0x1 << 5
LL_FACE_OUTER_SIDE_1 = 0x1 << 6
LL_FACE_OUTER_SIDE_2 = 0x1 << 7
LL_FACE_OUTER_SIDE_3 = 0x1 << 8

LL_SCULPT_TYPE_NONE = 0
LL_SCULPT_TYPE_SPHERE = 1
LL_SCULPT_TYPE_TORUS = 2
LL_SCULPT_TYPE_PLANE = 3
LL_SCULPT_TYPE_CYLINDER = 4

LL_SCULPT_TYPE_MASK = 0x07

LL_SCULPT_FLAG_INVERT = 0x40
LL_SCULPT_FLAG_MIRROR = 0x80
