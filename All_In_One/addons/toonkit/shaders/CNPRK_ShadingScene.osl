/*----------------------------------------- */
/*   Copyright (C) Cogumelo Softworks - ToonKit for Cycles v1.1
/*   Shading Scene
/*------------------------------------------*/

color CheckLight(int i, string splitedLights[],vector Normal ){
    //color Out;
    string splitedData[10];
    split(splitedLights[i],splitedData,",");
    
    string type = splitedData[0];    
    float smooth = stof(splitedData[7]);
    
    string colors[3];
    split(splitedData[9],colors,"|");
    vector col = vector(stof(colors[0]),stof(colors[1]),stof(colors[2]));
    
    if(type == "POINT"){
        vector pos = vector(stof(splitedData[1]),stof(splitedData[2]),stof(splitedData[3]));
        
        float radius = stof(splitedData[8]);
        vector n = normalize(Normal);
        vector lightDir = pos-P;
        float dist = length(lightDir);
        float NdotL = max(dot(n,normalize(lightDir)),0.0);
        
        
        float att = clamp(1.0 - dist/max(radius,0.001), 0.0, 1.0);
        float dif = clamp(NdotL * att,0.0,1.0);
        
        //return col;
        
        float value = smoothstep(0.0,clamp(smooth,0.0001,1.0),dif);

        //Out += dif;
        return value * col;
        //Mask += value;
    }
    // DIRECTIONAL
    else{
        vector rot = vector(stof(splitedData[4]),stof(splitedData[5]),stof(splitedData[6]));
        
        vector d = transform("world", normalize(rot));
        float dif = dot(normalize(Normal),d);
        
        float value = smoothstep(0.0,clamp(smooth,0.0001,1.0),dif);
        
        return clamp(col * value,0,1);
        //Mask += value;
    }
    //return Out;

}


shader Cell(
    
    normal Normal = N,
    string Data = "",
    
    output color Output=0)
{   
    string splitedLights[9];
    split(Data,splitedLights,";");
    int size = arraylength(splitedLights);
    

    if(strlen(splitedLights[1]) > 0){
        Output += CheckLight(1,splitedLights,Normal);
    }
    if(strlen(splitedLights[2]) > 0){
        Output += CheckLight(2,splitedLights,Normal);
    }
    if(strlen(splitedLights[3]) > 0){
        Output += CheckLight(3,splitedLights,Normal);
    }
    if(strlen(splitedLights[4]) > 0){
        Output += CheckLight(4,splitedLights,Normal);
    }
    if(strlen(splitedLights[5]) > 0){
        Output += CheckLight(5,splitedLights,Normal);
    }
    if(strlen(splitedLights[6]) > 0){
        Output += CheckLight(6,splitedLights,Normal);
    }
    if(strlen(splitedLights[7]) > 0){
        Output += CheckLight(7,splitedLights,Normal);
    }
    if(strlen(splitedLights[8]) > 0){
        Output += CheckLight(8,splitedLights,Normal);
    }
}